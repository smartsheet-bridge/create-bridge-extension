"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[629],{5318:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return p}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(n),p=r,m=u["".concat(l,".").concat(p)]||u[p]||d[p]||s;return n?a.createElement(m,o(o({ref:t},h),{},{components:n})):a.createElement(m,o({ref:t},h))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},517:function(e,t,n){var a=n(7378);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6359:function(e,t,n){n.d(t,{Z:function(){return h}});var a=n(7378),r=n(4309),s=n(8944),o="tabItem_c0e5",i="tabItemActive_28AG";var l=37,c=39;var h=function(e){var t=e.lazy,n=e.block,h=e.defaultValue,d=e.values,u=e.groupId,p=e.className,m=(0,r.Z)(),k=m.tabGroupChoices,f=m.setTabGroupChoices,g=(0,a.useState)(h),w=g[0],v=g[1],b=a.Children.toArray(e.children),y=[];if(null!=u){var T=k[u];null!=T&&T!==w&&d.some((function(e){return e.value===T}))&&v(T)}var A=function(e){var t=e.currentTarget,n=y.indexOf(t),a=d[n].value;v(a),null!=u&&(f(u,a),setTimeout((function(){var e,n,a,r,s,o,l,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,s=e.right,o=window,l=o.innerHeight,c=o.innerWidth,n>=0&&s<=c&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(i),setTimeout((function(){return t.classList.remove(i)}),2e3))}),150))},x=function(e){var t,n;switch(e.keyCode){case c:var a=y.indexOf(e.target)+1;n=y[a]||y[0];break;case l:var r=y.indexOf(e.target)-1;n=y[r]||y[y.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},p)},d.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,s.Z)("tabs__item",o,{"tabs__item--active":w===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:x,onFocus:A,onClick:A},n)}))),t?(0,a.cloneElement)(b.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}},4956:function(e,t,n){var a=(0,n(7378).createContext)(void 0);t.Z=a},4309:function(e,t,n){var a=n(7378),r=n(4956);t.Z=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},363:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return h},default:function(){return u}});var a=n(5773),r=n(808),s=(n(7378),n(5318)),o=n(6359),i=n(517),l={id:"use_auth",title:"Use Auth"},c={unversionedId:"recipes/use_auth",id:"recipes/use_auth",isDocsHomePage:!1,title:"Use Auth",description:"The majority of external service you would want to integrate with will require some form of authorization, and one of the most common and secure methods is OAuth.",source:"@site/docs/recipes/use_auth.mdx",sourceDirName:"recipes",slug:"/recipes/use_auth",permalink:"/create-bridge-extension/recipes/use_auth",version:"current",frontMatter:{id:"use_auth",title:"Use Auth"},sidebar:"docs",previous:{title:"Use Settings",permalink:"/create-bridge-extension/recipes/use_settings"},next:{title:"Manual Setup",permalink:"/create-bridge-extension/advanced/setup"}},h=[{value:"Overview",id:"overview",children:[]},{value:"Adding OAuth",id:"adding-oauth",children:[]},{value:"OAuth start",id:"oauth-start",children:[]},{value:"Handle OAuth callback",id:"handle-oauth-callback",children:[]},{value:"Renew OAuth token",id:"renew-oauth-token",children:[]},{value:"Using OAuth tokens",id:"using-oauth-tokens",children:[]}],d={toc:h};function u(e){var t=e.components,l=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The majority of external service you would want to integrate with will require some form of authorization, and one of the most common and secure methods is OAuth."),(0,s.kt)("p",null,"The extension-handler exposes functions to enable OAuth 2.0, an industry-standard authorization protocol, for your extension in Bridge."),(0,s.kt)("h3",{id:"overview"},"Overview"),(0,s.kt)("p",null,"The OAuth flow can be broken up into three stages"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Start"),(0,s.kt)("li",{parentName:"ol"},"Callback"),(0,s.kt)("li",{parentName:"ol"},"Renew")),(0,s.kt)("p",null,"The OAuth flow is initiated from Bridge by exposing a button or link that will open the authorization panel for the third-party service, like with the Smartsheet OAuth flow."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Allow Access",src:n(3420).Z})),(0,s.kt)("p",null,"After approving or rejecting the permissions, the third-party service will callback to your extension with a unique code that can be used to retrieve an access token. This access token is used to authorize requests to the third-party API client."),(0,s.kt)("p",null,"Most services will include a timeout on these access tokens, making them invalid after a specified time. However, they will usually have additional endpoints to renew these tokens without human interaction. Bridge can identify when an access token has expired and automatically renew it without interrupting any of the extension's functionality."),(0,s.kt)("h4",{id:"oauth-scope"},"OAuth scope"),(0,s.kt)("p",null,"Bridge supports two different levels, or scopes, of OAuth access to integrations."),(0,s.kt)("h5",{id:"provider"},"Provider"),(0,s.kt)("p",null,"This is the most common authorization with third-parties inside Bridge. This is where the Bridge admin authorizes an integration from the Bridge UI, and the OAuth data is available to the extension whenever it is executed for the workspace it was setup for."),(0,s.kt)("h5",{id:"user"},"User"),(0,s.kt)("p",null,"This is not used often within Bridge but is available if required. This would allow an extension to be authorized for each end user that triggers a workflow in Bridge via a chat channel like Microsoft Teams or Workplace Chat. A module that requires this can return a response status of ",(0,s.kt)("inlineCode",{parentName:"p"},"NEED_AUTH")," which would kick off the authentication flow in the chat channel. When successful the same user will have access to that OAuth data for the extension modules from that point forward."),(0,s.kt)("h3",{id:"adding-oauth"},"Adding OAuth"),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("p",null,"The functions to enable OAuth are defined in the extension ",(0,s.kt)("a",{parentName:"p",href:"/concepts/entry"},"Entry Point")," (",(0,s.kt)("inlineCode",{parentName:"p"},"index.js"),")."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createBridgeHandler } from '@smartsheet-bridge/extension-handler';\n//highlight-next-line\nimport { onOAuthHandleCode, onOAuthRenewToken, onOAuthStart } from './myOAuth';\n\nexport const main = createBridgeHandler({\n  //highlight-start\n  onOAuthHandleCode,\n  onOAuthRenewToken,\n  onOAuthStart,\n  //highlight-end\n});\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("p",null,"The functions to enable OAuth are defined in the extension ",(0,s.kt)("a",{parentName:"p",href:"/concepts/entry"},"Entry Point")," (",(0,s.kt)("inlineCode",{parentName:"p"},"index.ts"),")."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/index.ts"',title:'"/src/index.ts"'},"import { createBridgeHandler } from '@smartsheet-bridge/extension-handler';\n//highlight-next-line\nimport { onOAuthHandleCode, onOAuthRenewToken, onOAuthStart } from './myOAuth';\n\nexport const main = createBridgeHandler({\n  //highlight-start\n  onOAuthHandleCode,\n  onOAuthRenewToken,\n  onOAuthStart,\n  //highlight-end\n});\n")))),(0,s.kt)("p",null,"For the Bridge UI to show the connect button for your extension you need to inform it that you want an OAuth tab for the extension model. You do this by specifying a ",(0,s.kt)("inlineCode",{parentName:"p"},"uiSpec")," as part of the extension specification in the extension.json file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="extension.json snippit"',title:'"extension.json','snippit"':!0},'{\n...\n  "uiSpec": {\n    "providerTabs": [\n      {\n        "type": "OAUTH2",\n        "saveBtn": false,\n        "enable": "hasAgreed || isRegistered",\n        "default": false,\n        "nextTab": 1\n      },\n      {\n        "type": "SETTINGS",\n        "enable": "isAuthorized",\n        "nextTab": true,\n        "default": "isAuthorized",\n        "params": [\n          "other",\n          "settings",\n        ]\n      }\n    ]\n  },\n...\n}\n')),(0,s.kt)("p",null,"This example will show a connection tab where you can initiate the OAuth flow and a settings tab that will only be enabled after the OAuth flow has been completed which lets you set other settings."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"It is possible to have settings tabs before the connection tab if you need to set some values before the OAuth flow can start, such as the OAuth app client ID and secret."))),(0,s.kt)("h3",{id:"oauth-start"},"OAuth start"),(0,s.kt)("p",null,"The OAuthStart function allows the extension developer to define the URI and required credentials, such as the app client ID and required permission scopes."),(0,s.kt)("p",null,"The following example is how this would be done using the Smartsheet OAuth flow."),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/onOAuthStart.js"',title:'"/src/onOAuthStart.js"'},"export const onOAuthStart = (params, context) => {\n  const { clientId } = context.settings;\n\n  if (clientId === undefined || clientId === null || clientId === '') {\n    throw new Error('failed to start oauth flow : invalid client credentials');\n  }\n\n  return {\n    clientId,\n    oauth2URI: 'https://app.smartsheet.com/b/authorize',\n    scope:\n      'ADMIN_USERS ADMIN_WEBHOOKS CREATE_SHEETS DELETE_SHEETS READ_SHEETS READ_USERS SHARE_SHEETS WRITE_SHEETS',\n  };\n};\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/onOAuthStart.ts"',title:'"/src/onOAuthStart.ts"'},"import { StartOAuth2Function } from '@smartsheet-bridge/extension-handler';\nimport { StartOAuth2Response } from '@smartsheet-bridge/extension-handler/lib/responses/StartOAuth2Response';\nimport { Setings } from './settings';\n\nexport const onOAuthStart: StartOAuth2Function<Settings> = (\n  params,\n  context\n) => {\n  const { clientId } = context.settings;\n\n  if (clientId === undefined || clientId === null || clientId === '') {\n    throw new Error('failed to start oauth flow : invalid client credentials');\n  }\n\n  const response = new StartOAuth2Response();\n  response.setClientId(clientId);\n  response.setOAuth2URI('https://app.smartsheet.com/b/authorize');\n  response.setScope(\n    'ADMIN_USERS ADMIN_WEBHOOKS CREATE_SHEETS DELETE_SHEETS READ_SHEETS READ_USERS SHARE_SHEETS WRITE_SHEETS'\n  );\n\n  return response;\n};\n")))),(0,s.kt)("p",null,"Bridge will then take these credentials, and construct a URL containing these values as well as the response_type query parameter with the value code and values required by Bridge such as the state and the redirect URL which the third-party will redirect the user to when the authorization is approved, or rejected. When the user clicks the connection button they are redirected something like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-curl"},"https://app.smartsheet.com/b/authorize?response_type=code&client_id=123456789&scope=SCOPE_STRING&state=BRIDGE_DEFINED_STRING&redirect_uri=BRIDGE_REDIRECT_URI\n")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If the third-party your integrating with needs to know the OAuth callback URI in advance, as Smartsheet OAuth does, then you would use:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-url"},"https://oauth.bridge.smartsheet.com/api/settings/oauth/oauth2callback\n")),(0,s.kt)("p",{parentName:"div"},"The same callback URI is used by all extensions OAuth callback, Bridge uses the values in the generated state query parameter to determine which extension should handle the callback event."))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"By default, the link to start the OAuth flow will be displayed in the extension model on the connection tab with a ",(0,s.kt)("inlineCode",{parentName:"p"},"Connect")," button."),(0,s.kt)("p",{parentName:"div"},"It is possible to change this in the onOAuthStart function by supplying HTML to be displayed instead on the connection tab"),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},"function getAuthenticateButton() {\n  const msg = '<p>To link this plugin with a specific account authenticate with your Smartsheet account.</p>';\n  const btn = '<p><cv-button cv-click=\"authenticate()\">Authenticate</cv-button></p>';\n  return `<div>${msg}${btn}</div>`;\n}\n...\nreturn {\n  clientId,\n  oauth2URI: 'https://app.smartsheet.com/b/authorize',\n  scope: 'ADMIN_USERS ADMIN_WEBHOOKS CREATE_SHEETS DELETE_SHEETS READ_SHEETS READ_USERS SHARE_SHEETS WRITE_SHEETS',\n  comment: getAuthenticateButton()\n};\n")),"  "),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},"function getAuthenticateButton(): string {\n  const msg =\n    '<p>To link this integration with a specific account authenticate with your Smartsheet account.</p>';\n  const btn =\n    '<p><cv-button cv-click=\"authenticate()\">Authenticate</cv-button></p>';\n  return `<div>${msg}${btn}</div>`;\n}\n...\n\nconst response = new StartOAuth2Response();\nresponse.setClientId(clientId);\nresponse.setOAuth2URI('https://app.smartsheet.com/b/authorize');\nresponse.setScope(\n  'ADMIN_USERS ADMIN_WEBHOOKS CREATE_SHEETS DELETE_SHEETS READ_SHEETS READ_USERS SHARE_SHEETS WRITE_SHEETS'\n);\nresponse.setComment(getAuthenticateButton());\n")),"  ")),(0,s.kt)("p",{parentName:"div"},"The ",(0,s.kt)("inlineCode",{parentName:"p"},"authenticate()")," function used by the custom defined ",(0,s.kt)("inlineCode",{parentName:"p"},"Authenticate")," button acts the same as the standard ",(0,s.kt)("inlineCode",{parentName:"p"},"Connect")," button, so your custom button calls the correctly generated OAuth link."))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Additional StartOAuth2Response parameters"),(0,s.kt)("p",null,(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface StartOAuth2Response extends ExtensionResponse {\n  oauth2URI: string;\n  clientId: string;\n  scope?: string;\n  state?: string;\n  comment?: string;\n  extraParams?: Record<string, string>;\n}\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"oauth2URI")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"clientId")," parameters will always be required for all OAuth flows but the other parameters are optional."),(0,s.kt)("p",null,"scope - allows for permission scopes to be specified. This will be appended to the OAuth URL",(0,s.kt)("br",{parentName:"p"}),"\n","state - allows for developer defined data to be returned to the callback handle function",(0,s.kt)("br",{parentName:"p"}),"\n","comment - allows for connection tab customization mentioned above.",(0,s.kt)("br",{parentName:"p"}),"\n","extraParams - a list of key/value pairs that will be appended to the OAuth URL as additional query parameters to allow for supporting non-standard query parameters"))),(0,s.kt)("h3",{id:"handle-oauth-callback"},"Handle OAuth callback"),(0,s.kt)("p",null,"The handle OAuth callback function will be called when the third-party redirects to the Bridge callback after the authorization is approved."),(0,s.kt)("p",null,"The function is passed the following parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"code - a code string supplied by the third-party. This code is used to request an access token from the third-parties API."),(0,s.kt)("li",{parentName:"ul"},"scope - the scopes that have been approved. This could be undefined depending if the third-party allows for the permission scopes to be changed by the authenticating user or not, normally if this is undefined the user has agreed to all the permission scopes defined during the start function."),(0,s.kt)("li",{parentName:"ul"},"state - the state value that the developer set in the OAuth start function. This could be undefined if no state was specified during the start function."),(0,s.kt)("li",{parentName:"ul"},"oauthType - the type of OAuth data that is being refresh, either Provider or User.")),(0,s.kt)("p",null,"The following example is how this would be done using the Smartsheet OAuth flow."),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/onOAuthHandleCode.js"',title:'"/src/onOAuthHandleCode.js"'},"import { createHash } from 'crypto';\nimport * as smartsheet from 'smartsheet';\n\nconst getAccessToken = (clientId, secret, code) => {\n  const sha256 = createHash('sha256').update(`${secret}|${code}`).digest('hex');\n\n  const client = smartsheet.createClient({});\n  return client.tokens.getAccessToken({\n    queryParameters: {\n      client_id: clientId,\n      grant_type: 'authorization_code',\n      code,\n      hash: sha256,\n    },\n    contentType: 'application/x-www-form-urlencoded',\n  });\n};\n\nexport const onOAuthHandleCode = (params, concontextfig) => {\n  if (params.code === undefined || params.code === null || params.code === '') {\n    throw new Error(\n      'failed to create access token : authentication code not specified'\n    );\n  }\n\n  const { clientId, secret } = context.settings;\n\n  if (clientId === undefined || secret === undefined) {\n    throw new Error(\n      'failed to create access token : client identifier or secret has not been specified'\n    );\n  }\n\n  return getAccessToken(clientId, secret, params.code)\n    .then(token => ({\n      access_token: token.access_token,\n      expires_in: token.expires_in,\n      refresh_token: token.refresh_token,\n      token_type: token.token_type,\n    }))\n    .catch(err => {\n      throw new Error(`failed to create access token : ${err.message}`);\n    });\n};\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/onOAuthHandleCode.ts"',title:'"/src/onOAuthHandleCode.ts"'},"import { HandleOAuth2CodeFunction } from '@smartsheet-bridge/extension-handler';\nimport { HandleOAuth2CodeResponse } from '@smartsheet-bridge/extension-handler/lib/responses/HandleOAuth2CodeResponse';\nimport { createHash } from 'crypto';\nimport * as smartsheet from 'smartsheet';\nimport { Settings } from './settings';\n\ninterface OAuthToken {\n  access_token: string;\n  token_type: string;\n  refresh_token: string;\n  expires_in: number;\n}\n\nconst getAccessToken = (\n  clientId: string,\n  secret: string,\n  code: string\n): Promise<OAuthToken> => {\n  const sha256 = createHash('sha256').update(`${secret}|${code}`).digest('hex');\n\n  const client = smartsheet.createClient({});\n  return client.tokens.getAccessToken({\n    queryParameters: {\n      client_id: clientId,\n      grant_type: 'authorization_code',\n      code,\n      hash: sha256,\n    },\n    contentType: 'application/x-www-form-urlencoded',\n  });\n};\n\nexport const onOAuthHandleCode: HandleOAuth2CodeFunction<Settings> = (\n  params,\n  context\n) => {\n  if (params.code === undefined || params.code === null || params.code === '') {\n    throw new Error(\n      'failed to create access token : authentication code not specified'\n    );\n  }\n\n  const { clientId, secret } = context.settings;\n\n  if (clientId === undefined || secret === undefined) {\n    throw new Error(\n      'failed to create access token : client identifier or secret has not been specified'\n    );\n  }\n\n  return getAccessToken(clientId, secret, params.code)\n    .then(token => {\n      return HandleOAuth2CodeResponse.create({\n        access_token: token.access_token,\n        expires_in: token.expires_in,\n        refresh_token: token.refresh_token,\n        token_type: token.token_type,\n      });\n    })\n    .catch(err => {\n      throw new Error(`failed to create access token : ${err.message}`);\n    });\n};\n")))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Additional HandleOAuth2CodeResponse parameters"),(0,s.kt)("p",null,(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface HandleOAuth2CodeResponse extends ExtensionResponse {\n  access_token: string;\n  token_type?: string;\n  refresh_token?: string;\n  expires_in?: number;\n  grant_type?: string;\n  metadata?: Record<string, string>;\n  redirectMessage?: string;\n  redirectTo?: string;\n  settings?: SerializableObject;\n}\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"access_token")," parameter is the only required parameter for this response."),(0,s.kt)("p",null,"expires_in - state the time, in seconds, until the access token expires. If the token does not expire then this can be left undefined or set to 0",(0,s.kt)("br",{parentName:"p"}),"\n","refresh_token - a special third-party defined token which is used as part of the refresh token flow"),(0,s.kt)("p",null,"With a positive ",(0,s.kt)("inlineCode",{parentName:"p"},"expires_in")," value and a non-empty ",(0,s.kt)("inlineCode",{parentName:"p"},"refresh_token"),", Bridge will automatically attempt to refresh the ",(0,s.kt)("inlineCode",{parentName:"p"},"access_token")," when it believes it has expired based on the available information."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"token_type")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"grant_type")," parameters are informational only, they will be included in the OAuth data available to extension functions but these values are not parsed by Bridge. This is also true for the ",(0,s.kt)("inlineCode",{parentName:"p"},"metadata")," collection, which is a developer defined key/value collection that is included in the OAuth data for non-standard OAuth data."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"redirectmessage")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"redirectTo")," parameters are used to change the message or the redirect location shown to the user after they have authenticated. Only one can be set at any time, with ",(0,s.kt)("inlineCode",{parentName:"p"},"redirectTo")," taking priority. These parameters are more important when using User scoped OAuth, as this will allow you to hide Bridge from the end users who would normally be seeing the chat channel's branding and be oblivious to using Bridge behind the scenes."),(0,s.kt)("p",null,"Finally, ",(0,s.kt)("inlineCode",{parentName:"p"},"settings")," is an object used to detail any updates made to the extension settings, passed as part of the ",(0,s.kt)("inlineCode",{parentName:"p"},"context")," parameter. If the developer wants to update any information included in the extensions settings they will need to include the complete settings object with the new information. This has been used by other extensions to include values to read-only fields describing who has authenticated the extension, making it easy for future users to know who has approved an extension for the workspace."))),(0,s.kt)("h3",{id:"renew-oauth-token"},"Renew OAuth token"),(0,s.kt)("p",null,"The renew OAuth token function is called by Bridge when it calculates that a OAuth access token has expired based on the supplied ",(0,s.kt)("inlineCode",{parentName:"p"},"expires_in")," parameter supplied during the handle callback function."),(0,s.kt)("p",null,"The function is passed two parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"renewToken - the OAuth data ",(0,s.kt)("inlineCode",{parentName:"li"},"refresh_token")," value"),(0,s.kt)("li",{parentName:"ul"},"oauthType - the type of OAuth data that is being refresh, either Provider or User.")),(0,s.kt)("p",null,"This function is expected to call the third-party API and create a new, non-expired, access_token and return that value to be used until it expires again."),(0,s.kt)("p",null,"The following example is how this would be done using the Smartsheet OAuth flow."),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/onOAuthRenewToken.js"',title:'"/src/onOAuthRenewToken.js"'},"import { createHash } from 'crypto';\nimport * as smartsheet from 'smartsheet';\n\nconst refreshAccessToken = (clientId, secret, refreshToken) => {\n  const sha256 = createHash('sha256')\n    .update(`${secret}|${refreshToken}`)\n    .digest('hex');\n\n  const client = smartsheet.createClient({});\n  return client.tokens.getAccessToken({\n    queryParameters: {\n      client_id: clientId,\n      grant_type: 'refresh_token',\n      hash: sha256,\n      refresh_token: refreshToken,\n    },\n    contentType: 'application/x-www-form-urlencoded',\n  });\n};\n\nexport const onOAuthRenewToken = (params, context) => {\n  if (\n    params.renewToken === undefined ||\n    params.renewToken === null ||\n    params.renewToken === ''\n  ) {\n    throw new Error(\n      'failed to refresh access token : renew token not specified'\n    );\n  }\n\n  const { clientId, secret } = context.settings;\n\n  if (clientId === undefined || secret === undefined) {\n    throw new Error(\n      'failed to refresh access token : client identifier or secret not specified'\n    );\n  }\n\n  return refreshAccessToken(clientId, secret, params.renewToken)\n    .then(token => ({\n      access_token: token.access_token,\n      expires_in: token.expires_in,\n      refresh_token: token.refresh_token,\n      token_type: token.token_type,\n    }))\n    .catch(err => {\n      throw new Error(`failed to refresh access token : ${err.message}`);\n    });\n};\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/onOAuthRenewToken.ts"',title:'"/src/onOAuthRenewToken.ts"'},"import { RenewOAuth2TokenFunction } from '@smartsheet-bridge/extension-handler';\nimport { RenewOAuth2TokenResponse } from '@smartsheet-bridge/extension-handler/lib/responses/RenewOAuth2TokenResponse';\nimport { createHash } from 'crypto';\nimport * as smartsheet from 'smartsheet';\nimport { Settings } from './settings';\n\ninterface OAuthToken {\n  access_token: string;\n  token_type: string;\n  refresh_token: string;\n  expires_in: number;\n}\n\nconst refreshAccessToken = (\n  clientId: string,\n  secret: string,\n  refreshToken: string\n): Promise<OAuthToken> => {\n  const sha256 = createHash('sha256')\n    .update(`${secret}|${refreshToken}`)\n    .digest('hex');\n\n  const client = smartsheet.createClient({});\n  return client.tokens.getAccessToken({\n    queryParameters: {\n      client_id: clientId,\n      grant_type: 'refresh_token',\n      hash: sha256,\n      refresh_token: refreshToken,\n    },\n    contentType: 'application/x-www-form-urlencoded',\n  });\n};\n\nexport const onOAuthRenewToken: RenewOAuth2TokenFunction<Settings> = (\n  params,\n  context\n) => {\n  if (\n    params.renewToken === undefined ||\n    params.renewToken === null ||\n    params.renewToken === ''\n  ) {\n    throw new Error(\n      'failed to refresh access token : renew token not specified'\n    );\n  }\n\n  const { clientId, secret } = context.settings;\n\n  if (clientId === undefined || secret === undefined) {\n    throw new Error(\n      'failed to refresh access token : client identifier or secret not specified'\n    );\n  }\n\n  return refreshAccessToken(clientId, secret, params.renewToken)\n    .then(token => {\n      return RenewOAuth2TokenResponse.create({\n        access_token: token.access_token,\n        expires_in: token.expires_in,\n        refresh_token: token.refresh_token,\n        token_type: token.token_type,\n      });\n    })\n    .catch(err => {\n      throw new Error(`failed to refresh access token : ${err.message}`);\n    });\n};\n")))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Additional RenewOAuth2TokenResponse parameters"),(0,s.kt)("p",null,(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenewOAuth2TokenResponse extends ExtensionResponse {\n  access_token: string;\n  token_type?: string;\n  refresh_token?: string;\n  expires_in?: number;\n  grant_type?: string;\n  metadata?: Record<string, string>;\n}\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"access_token")," parameter is the only required parameter for this response."),(0,s.kt)("p",null,"expires_in - state the time, in seconds, until the access token expires. If the token does not expire then this can be left undefined or set to 0",(0,s.kt)("br",{parentName:"p"}),"\n","refresh_token - a special third-party defined token which is used as part of the refresh token flow"),(0,s.kt)("p",null,"With a positive ",(0,s.kt)("inlineCode",{parentName:"p"},"expires_in")," value and a non-empty ",(0,s.kt)("inlineCode",{parentName:"p"},"refresh_token"),", Bridge will automatically attempt to refresh the ",(0,s.kt)("inlineCode",{parentName:"p"},"access_token")," when it believes it has expired based on the available information."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"token_type")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"grant_type")," parameters are informational only, they will be included in the OAuth data available to extension functions but these values are not parsed by Bridge. This is also true for the ",(0,s.kt)("inlineCode",{parentName:"p"},"metadata")," collection, which is a developer defined key/value collection that is included in the OAuth data for non-standard OAuth data."))),(0,s.kt)("h3",{id:"using-oauth-tokens"},"Using OAuth tokens"),(0,s.kt)("p",null,"After you have completed the OAuth flow, all extension functions executed in the workspace will be passed the OAuth data. It is available via the function context so you can access the access token as well as any metadata you may require."),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/modules/getSheet.js"',title:'"/src/modules/getSheet.js"'},"import * as smartsheet from 'smartsheet';\n\nexport const getSheet = (moduleParams, context) => {\n  const client = smartsheet.createClient({\n    //highlight-next-line\n    accessToken: context.oAuthData.access_token,\n  });\n\n  return client.sheets\n    .getSheet({\n      id: moduleParams.sheetId,\n    })\n    .then(data => ({\n      value: data,\n    }))\n    .catch(err => {\n      throw new Error(`failed to gets sheet : ${err.message}`);\n    });\n};\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/modules/getSheet.ts"',title:'"/src/modules/getSheet.ts"'},"import {\n  ModuleFunction,\n  ModuleResponse,\n} from '@smartsheet-bridge/extension-handler';\nimport * as smartsheet from 'smartsheet';\nimport { Settings } from './settings';\n\ntype GetSheetParams = {\n  sheetId: string;\n};\n\nexport const getSheet: ModuleFunction<GetSheetParams, Settings> = (\n  moduleParams,\n  context\n) => {\n  const client = smartsheet.createClient({\n    //highlight-next-line\n    accessToken: context.oAuthData.access_token,\n  });\n\n  return client.sheets\n    .getSheet({\n      id: moduleParams.sheetId,\n    })\n    .then((data: any) => {\n      const response = new ModuleResponse();\n      response.setValue(data);\n      return response;\n    })\n    .catch((err: Error) => {\n      throw new Error(`failed to gets sheet : ${err.message}`);\n    });\n};\n")))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"User OAuth example"),(0,s.kt)("p",null,(0,s.kt)("p",null,"This example shows the same module, but refactored for the use-case where we are allowing a chat user access instead of on the provider level."),(0,s.kt)("p",null,"The only change required for this example is included a check for the user level OAuth data, and if it is missing, informing Bridge to start the user OAuth flow by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"NEED_AUTH")," status"),(0,s.kt)(o.Z,{groupId:"js2ts",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { ExtensionStatus } from '@smartsheet-bridge/extension-handler';\nimport * as smartsheet from 'smartsheet';\n\nexport const getSheet = (moduleParams, context) => {\n  if (context.channelSettings === undefined) {\n    throw new Error('expect to be called in a chat channel');\n  }\n  if (\n    context.channelSettings.oAuthData === undefined ||\n    context.channelSettings.oAuthData.access_token === undefined\n  ) {\n    return { status: ExtensionStatus.NEED_AUTH };\n  }\n\n  const client = smartsheet.createClient({\n    accessToken: context.oAuthData.access_token,\n  });\n\n  return client.sheets\n    .getSheet({\n      id: moduleParams.sheetId,\n    })\n    .then(data => ({\n      value: data,\n    }))\n    .catch(err => {\n      throw new Error(`failed to gets sheet : ${err.message}`);\n    });\n};\n"))),(0,s.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  ExtensionStatus,\n  ModuleFunction,\n  ModuleResponse,\n} from '@smartsheet-bridge/extension-handler';\nimport * as smartsheet from 'smartsheet';\nimport { Settings } from './settings';\n\ntype GetSheetParams = {\n  sheetId: string;\n};\n\nexport const getSheet: ModuleFunction<GetSheetParams, Settings> = (\n  moduleParams,\n  context\n) => {\n  //highlight-start\n  if (context.channelSettings === undefined) {\n    throw new Error('expect to be called in a chat channel');\n  }\n  if (\n    context.channelSettings.oAuthData === undefined ||\n    context.channelSettings.oAuthData.access_token === undefined\n  ) {\n    return ModuleResponse.create({ status: ExtensionStatus.NEED_AUTH });\n  }\n  //highlight-end\n\n  const client = smartsheet.createClient({\n    accessToken: context.oAuthData.access_token,\n  });\n\n  return client.sheets\n    .getSheet({\n      id: moduleParams.sheetId,\n    })\n    .then((data: any) => {\n      const response = new ModuleResponse();\n      response.setValue(data);\n      return response;\n    })\n    .catch((err: Error) => {\n      throw new Error(`failed to gets sheet : ${err.message}`);\n    });\n};\n")))))))}u.isMDXComponent=!0},8944:function(e,t,n){function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})},3420:function(e,t,n){t.Z=n.p+"assets/images/SmartsheetAllowAccess-05432c6894be2e0045cbb06c5fd24039.png"}}]);